import asyncio
import discord
import urllib.request
import urllib.parse
from bs4 import BeautifulSoup

app = discord.Client()
token = 'NTIwOTgwNDg0NDQ5MzcwMTQz.D2d7vQ.oK2Z-RnxV4u7CNcyAT7lx-K8P3U'

command_head = '.'
embed_color = 0x880015

@app.event
async def on_ready():
    print('다음으로 로그인합니다: ')
    print(app.user.name)
    print(app.user.id)
    print('===============')
    await app.change_presence(game=discord.Game(name=command_head+'도움말', type=1))

searching = list
@app.event
async def on_message(message):
    if message.author.bot:
        return None
    if message.content.startswith(command_head):
        command = message.content[len(command_head):]
        if command.startswith('도움말'):
            await app.send_typing(message.channel)
            content = '{ch}검색 (장비|무기|방어구) [장비명] : 장비 검색\n'+\
                '{ch}검색 (퍽) [퍽이름] : 퍽 설명 검색'
            await app.send_message(message.channel, content)
        if command.startswith('검색'):
            msg = message.content.split(' ')
            if len(msg)>2:
                if msg[1] in ["장비","무기","방어구"]:
                    await app.send_typing(message.channel)
                    search = msg[2:]
                    search_ = urllib.parse.quote(' '.join(search))
                    req = urllib.request.Request("https://www.google.com/search?q=light.gg+"+search_, headers={'User-Agent': 'Mozilla/5.0'})
                    html = urllib.request.urlopen(req).read().decode('utf-8')
                    soup = BeautifulSoup(html, 'html.parser')

                    link = soup.select('div.g .r a')[0]
                    title = link.text.strip()
                    href = urllib.parse.unquote(link.get('href').split('/url?q=')[1].split('&')[0])

                    req = urllib.request.Request(href, headers={'User-Agent': 'Mozilla/5.0'})
                    html = urllib.request.urlopen(req).read().decode('utf-8')
                    soup = BeautifulSoup(html, 'html.parser')
                    perks = soup.select('#socket-container .perks .sockets')

                    if len(perks)>0:
                        img = soup.select('.item-header .bump img')[0].get('src')
                        frame = perks[0].select('img')[0].get('alt')
                        embed = discord.Embed(title='{}님의  {} 검색 결과'.format(message.author.name, title.split(' - ')[0]), url=href, color=embed_color)
                        embed.set_thumbnail(url=img)
                        embed.add_field(name='프레임', value=frame, inline=False)

                        fixed_value = []
                        for perk in perks:
                            li = perk.select('.item.show-hover:not(.random)')
                            if len(li)>0:
                                alts = ''
                                for img in li:
                                    alt = img.select('img')[0].get('alt')
                                    if alt!=frame:
                                        alts += alt+'\n'
                                if len(alts)>0: fixed_value.append(alts)

                        perks_rnd = soup.select('#socket-container .perks .sockets li.random')
                        # embed = discord.Embed(title='', color=embed_color)
                        if len(perks_rnd)>0: tmp = perks_rnd
                        else: tmp = perks
                        if len(perks)>0:
                            i = 0
                            for perk in tmp[1:]:
                                field_name = '퍽 '+str(i+1)
                                field_value = fixed_value[i]
                                if len(perks_rnd)>0:
                                    li = perks_rnd[i].select('.item.show-hover.random')
                                    for img in li:
                                        alt = img.select('img')[0].get('alt')
                                        if alt!=frame:
                                            field_value += alt+' / '
                                    field_value = field_value[:-3]
                                i+=1
                                embed.add_field(name=field_name, value=field_value)
                        await app.send_message(message.channel, embed=embed)
                    else:
                        await app.send_message(message.channel, '검색에 실패했습니다. 자세하게 입력해주세요.')
                if msg[1] in ["퍽"]:
                    await app.send_typing(message.channel)
                    search = msg[2:]
                    search_ = urllib.parse.quote(' '.join(search))

                    req = urllib.request.Request("https://www.google.com/search?q=light.gg+"+search_, headers={'User-Agent': 'Mozilla/5.0'})
                    html = urllib.request.urlopen(req).read().decode('utf-8')
                    soup = BeautifulSoup(html, 'html.parser')

                    link = soup.select('div.g .r a')[0]
                    title = link.text.strip()
                    href = urllib.parse.unquote(link.get('href').split('/url?q=')[1].split('&')[0])

                    req = urllib.request.Request(href, headers={'User-Agent': 'Mozilla/5.0'})
                    html = urllib.request.urlopen(req).read().decode('utf-8')
                    soup = BeautifulSoup(html, 'html.parser')
                    #main-column > div.item-header > div.item > div.flavor-text > h4
                    flavor = soup.select('.item-header .flavor-text > h4')

                    if len(flavor)>0:
                        embed=discord.Embed(title='{}님의  {} 검색 결과'.format(message.author.name, title.split(' - ')[0]), description=flavor[0].text, url=href, color=embed_color)
                        await app.send_message(message.channel, embed=embed)
                    else:
                        await app.send_message(message.channel, '검색에 실패했습니다. 자세하게 입력해주세요.')
            else:
                await app.send_message(message.channel, '명령어는 {}도움말 로 확인해주세요'.format(command_head))

app.run(token)